save=Save
are.you.sure = Are you sure?

#Connection providers
connection.tested.successfully = Connection tested successfully
connection.failed.status._.error.message._ = Connection failed. Status: {0}. Error message: {1}
connection.provider.updated.successfully = Connection provider updated successfully
no.connection.providers.selected=No Connection providers selected

#Many-to-many
check.boxes.horizontal = Check boxes (horizontal)
check.boxes.vertical = Check boxes (vertical)
lists = Lists
add.a.selection.provider =  Add a selection provider...
save.this.configuration.to.see.it.in.selection.lists = \
  (save this configuration to see it in selection lists)

m2m-update = Update

layouts.admin.connectionProviders = Connection Providers
edit.connection.provider = Edit connection provider
available.database.platforms=Available database platforms
synchronize=Synchronize
run.wizard=Run wizard
detected.values=Detected values
configured.schemas=Configured schemas
schemas=Schemas
return.to.list=<< Return to list

detected.type.mismatch.between.column._.and.column._ = Detected type mismatch between column {0} ({1}) and column {2} ({3}) linked by foreign key {4}
detected.type.mismatch.with.column._ = Detected type mismatch with column {0} ({1}) linked by foreign key {2}
invalid.entity.name = Invalid entity name
invalid.property.name = Invalid property name
invalid.date.format.string = Invalid date format string. Consult the API docs for SimpleDateFormat.
entity.name = Entity name
java.class = Java class
short.name = Short name
class.not.found._ = Class not found: {0}
skipped.column._.with.unknown.type._ = Skipped column {0} with unknown type {1} (JDBC: {2})
database/schema = Database/Schema
table.entity = Table (Entity)
layouts.admin.tables.addSelectionProvider = Add selection provider
layouts.admin.tables.addSelectionProvider.title = Add a selection provider to table {0}
layouts.admin.tables.editSelectionProvider.title = Edit selection provider {0}
layouts.admin.tables.title = Edit table {0}
table.and.columns = Table and columns
change.order = Change order
drag.the.columns.to.change.their.order.then.push.ok = Drag the columns to change their order, then push the Ok button below to confirm or the Cancel button to restore the previous ordering. Note: your changes won't immediately affect the columns summary table; for that to happen, you need to save first.
foreign.keys.and.selection.providers = Foreign keys and selection providers
columns = Columns
foreign.keys = Foreign keys
name = Name
property.name.one.side = Property name (one side)
property.name.many.side = Property name (many side)
referenced.table = Referenced table
referenced.columns = Referenced columns
none.available = None available.
selection.providers = Selection providers
database = Database
query = Query
edit.column._ = Edit column {0}
please.fill.exactly.one.of.the.fields.hql.sql = Please fill exactly one of the fields HQL, SQL
column._.not.found = Column {0} not found
selection.provider._.already.exists = Selection provider {0} already exists
model.saved.successfully = Model saved successfully

reload = Reload
model.successfully.reloaded = Model successfully reloaded.
layouts.admin.reload-model.title = Reload the model from XML
layouts.admin.reload-model.text = If you have modified this application's model (portofino-model.xml) externally, you can reload it by pressing the Reload model button. To run the Liquibase changelog and update the model accordingly, use the Sync button on the desired connection provider's page.