<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
    <display-name>ManyDesigns Portofino</display-name>
    <description>ManyDesigns Portofino</description>

    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <!--
        Here you can change where the Portofino app lives. If you comment this out, the default value
        ${serverInfo:realPath}/WEB-INF is used.
    -->
    <context-param>
        <param-name>portofino.application.directory</param-name>
        <param-value>${portofino.application.directory}</param-value>
        <!--
        The param-value above is meant to be interpolated by Maven. If you activate the docker profile
        (-Pdocker from the command line), the generated application will point to a Docker volume
        mapped to the src/main/webapp/WEB-INF directory, so that you'll be able to work on the application both
        from your IDE and from Portofino's web UI and immediately see the effects of your changes, in
        both directions. Note that this hard-codes a Docker-specific path in this web.xml file. It's meant
        for development on your own machine only, the generated war WILL NOT WORK on other machines.
         -->
    </context-param>

    <listener>
        <listener-class>com.manydesigns.portofino.ui.support.BaseHrefReplaceListener</listener-class>
    </listener>

    <!-- The REST API -->
    <servlet>
        <servlet-name>com.manydesigns.portofino.jersey.PortofinoApplication</servlet-name>
    </servlet>
    <servlet-mapping>
        <servlet-name>com.manydesigns.portofino.jersey.PortofinoApplication</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>

    <!-- Support for the Angular UI -->
    <context-param>
        <!-- The root of the API. It can be either a path relative to this webapp or an absolute URL. -->
        <param-name>portofino.api.root</param-name>
        <param-value>api</param-value>
    </context-param>
    <!-- If this parameter is not present, jersey-spring5 automatically registers a ContextLoaderListener that clashes
     with Portofino's. -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>DISABLE</param-value>
    </context-param>

    <servlet>
        <servlet-name>Portofino Frontend API</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>com.manydesigns.portofino.ui.support</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>Portofino Frontend API</servlet-name>
        <url-pattern>/portofino</url-pattern>
        <url-pattern>/portofino/*</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>AutoConfigJsonFilter</filter-name>
        <filter-class>com.manydesigns.portofino.ui.support.pages.AutoConfigJsonFilter</filter-class>
        <init-param>
            <param-name>writeGeneratedFiles</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>AutoConfigJsonFilter</filter-name>
        <url-pattern>/pages/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>ConfigJsonCacheFilter</filter-name>
        <filter-class>com.manydesigns.portofino.ui.support.pages.ConfigJsonCacheFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ConfigJsonCacheFilter</filter-name>
        <url-pattern>/pages/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>UrlRewriteFilter</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
        <init-param>
            <param-name>confReloadCheckInterval</param-name>
            <param-value>60</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>UrlRewriteFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

</web-app>
