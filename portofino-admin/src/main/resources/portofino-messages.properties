move = Move
copy = Copy
copy.to = Copy to...
are.you.sure.you.want.to.delete.this.page = Are you sure you want to delete this page?
deleting.it.will.also.delete.its.children = Deleting it will also delete its children:
really.delete = Really delete?
where.to.move = Where to move
move.to = Move to...
root.permissions = Root permissions
top.level.pages = Top-level pages
add.new.page = Add new page
preview = Preview
test.a.user = Test a user
select.a.user.and.view.its.permissions = Select a user and view its permissions about this page:
group = Group
access.level = Access level
#Permissions
inherited._=Inherited ({0})
view=View
edit=Edit
develop=Develop
deny=Deny
none=None
permissions = Permissions
page.permissions.for._ = Page permissions for: {0}
page.permissions.saved.successfully = Page permissions saved successfully.
root.permissions.saved.successfully = Root permissions saved successfully.
#Page crud
error.creating.page._ = Error creating page: {0} (see the logs for more details)
error.creating.page.the.directory.already.exists = Error creating page, the directory already exists
error.creating.page.the.directory.could.not.be.created = Error creating page, the directory could not be created
page.created.successfully.you.should.now.configure.it = Page created successfully. You should now configure it.
invalid.fragment.only.letters.numbers.etc.are.allowed = Invalid fragment. Only letters, numbers, - and _ characters are allowed.
you.cant.delete.the.root.page = You can''t delete the root page!
you.cant.delete.the.landing.page = You can''t delete the landing page!
you.must.select.a.destination = You must select a destination
you.cant.copy.or.move.the.root.page = You can''t copy or move the root page!
you.dont.have.edit.access.level.on.the.destination.page = You don''t have edit access level on the destination page
invalid.destination._ = Invalid destination: {0}
destination.is.an.existing.file/directory._ = Destination is an existing file/directory: {0}
you.cant.move.the.landing.page = You can''t move the landing page!
the.page._.is.not.embedded.and.not.included.in.navigation = The page {0} is not embedded and not included in navigation - it will only be reachable by URL or explicit linking.
error.updating.page._ = Error updating page: {0} (see the logs for more details)
page.children.for._ = Page children for: {0}
detail = Detail
drag.the.rows.of.the.tables.to.reorder.the.children = Drag the rows of the tables to reorder the children. Non active children cannot be reordered.

#Wizard
next>> = Next >>
<<previous = << Previous
finish = Finish

show.advanced.options = Show advanced options
additional.drivers.can.be.downloaded = Additional drivers can be downloaded and added to the shared libraries of your application server.
there.is.already.a.database.named._ = There is already a database named {0}
couldnt.read.schema.names.from.db._ = Couldn''t read schema names from db: {0}
select.at.least.a.schema = Select at least a schema
error.in.database.synchronization._ = Error in database synchronization: {0}
could.not.save.model._ = Could not save model: {0}
could.not.create.pages._ = Could not create pages: {0}
couldnt.create.directory = Couldn''t create directory {0}
directory.exists.page.not.created._directory.exists.page.not.created._ = Directory exists, page not created ({0})
couldnt.set.up.user.management._ = Couldn''t set up user management: {0}
no.page.will.be.generated = No page will be generated
schema._.was.already.configured = Schema {0} was already configured: existing pages won''t be updated

use.an.existing.database.connection = Use an existing database connection
or.create.a.new.one.choose.its.type = or create a new one (choose its type):
create.a.new.connection.choose.type = Create a new connection (choose type):
found.schemas = Found schemas:
select.root.tables = Select root tables

users.and.groups.tables = Users and groups tables

warning.configuring.user.management.will.overwrite = Warning: configuring user management will overwrite the existing Security.groovy
if.you.want.more.control.on.password.encryption = Note: if you want more control on password encryption \
  (salting, multiple hash iterations, different algorithms) you can manually edit Security.groovy afterwards, which \
  already provides the necessary hooks.

users.table.setup = Users table setup
users.table = Users table
password.encryption.algorithm = password encryption algorithm
plain.text = Plain text
md5.base64.encoded = MD5 (Base64 encoded)
md5.hex.encoded = MD5 (Hex encoded)
sha1.base64.encoded.portofino3 = SHA-1 (Base64 encoded) - Portofino 3
sha1.hex.encoded = SHA-1 (Hex encoded)
user.id.property = user id property
username.property = username property
password.property = password property
email.property = email property
token.property = token property

groups.tables.setup = Groups tables setup
groups.table = groups table
name.of.the.administrators.group = name of the administrators group

user-group.join.table = user-group join table
property.that.links.to.user = property that links to user
property.that.links.to.group = property that links to group

select.the.generation.strategy = Select the strategy used to generate pages:
dont.generate.anything = Don't generate anything
automatic = Automatic
manual.choose.which.pages.will.be.created = Manual (choose which pages will be created)
generate.a.calendar.page = Generate a calendar page

press.finish.to.build.the.application = Press Finish to build the application. \
  This operation might require several minutes to complete.
application.created = \
  Application created. Now browse it and customize it! Remember that the wizard is only a starting point, there''s \
  much more in Portofino! You might find the <a href="http://portofino.manydesigns.com/en/docs">documentation</a> \
  useful.
user.management.has.been.configured.please.edit.security.groovy = \
  User management has been configured. Please edit the generated Security.groovy \
  file to suit your environment and to remove the admin user hardcoded for the wizard. \
  You have been automatically logged out of the system; please log in again.

step._ = Step {0}
connect.to.your.database = Connect to your database
select.the.database.schemas.to.import = Select the database schema(s) to import
set.up.user.management = Set up user management
customize.user.management = Customize user management
generate.pages = Generate pages
build.the.application = Build the application!

reset.groovy.script.engine = Reset the Groovy script engine
layouts.admin.groovy.text =
script.engine.successfully.reset = Script engine successfully reset

configuration = Configuration
settings = Settings
modules = Modules
servlet.context = Servlet Context
security = Security
data.modeling = Data modeling
wizard = Wizard
connection.providers = Connection providers
tables = Tables
reload.model = Reload model
mail = Mail
groovy = Groovy